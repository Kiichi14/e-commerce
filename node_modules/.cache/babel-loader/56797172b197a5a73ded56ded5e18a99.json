{"ast":null,"code":"export default {\n  props: ['product', 'active'],\n\n  /*On recupere les valeurs initial de product et active*/\n  methods: {\n    /*Appelle des fonctions permettant de ouvrir ou fermer la description produit*/\n    addToCart() {\n      this.$store.commit('addToCart', this.product);\n    },\n\n    removeToCart() {\n      this.$store.commit('removeToCart', this.product);\n    }\n\n  },\n  computed: {\n    product_total() {\n      return this.$store.getters.productQuantity(this.product);\n      /*utilise le productQuantity utilise dans le magasin afin de determiner le nombre de produit total*/\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA4BI,eAAc;AACVA,OAAK,EAAC,CAAC,SAAD,EAAY,QAAZ,CADI;;AACkB;AAC5BC,SAAO,EAAE;AAAC;AACNC,aAAS,GAAG;AACR,WAAKC,MAAL,CAAYC,MAAZ,CAAmB,WAAnB,EAAgC,KAAKC,OAArC;AACH,KAHI;;AAILC,gBAAY,GAAE;AACV,WAAKH,MAAL,CAAYC,MAAZ,CAAmB,cAAnB,EAAmC,KAAKC,OAAxC;AACJ;;AANK,GAFC;AAWVE,UAAQ,EAAE;AACNC,iBAAa,GAAE;AACX,aAAO,KAAKL,MAAL,CAAYM,OAAZ,CAAoBC,eAApB,CAAoC,KAAKL,OAAzC,CAAP;AAAwD;AAC5D;;AAHM;AAXA,CAAd","names":["props","methods","addToCart","$store","commit","product","removeToCart","computed","product_total","getters","productQuantity"],"sourceRoot":"","sources":["/Users/etiennehauguel/Desktop/exo perso/micro-projet/e-commerce/src/components/product/ProductDescription.vue"],"sourcesContent":["<template><!-----------------Template du corps de la carte produit------------------------------>\n    <div class=\"description-background\" :class=\"{show: active}\" >    \n        \n    <div class=\"description\" :class=\"{show: active}\">\n        <div class=\"description-close\" @click=\"$emit('closeDescription')\"><!--Appelle fonction CloseDescriptions-->\n            X\n        </div> \n\n        <div v-if=\"product\" class=\"product-details\"><!---Si le produit est bien present alors on creer une div avec ses info recuperer dans le JSON -->\n            <img :src=\"product.productPicture\" alt=\"image article\">\n            <h3 class=\"text-center\"> {{product.productName}} </h3>\n            <h3 class=\"text-center\"> {{product.productPrice}} â‚¬ </h3>\n\n            <div class=\"panier_total\" v-if=\"product_total\">\n                <h3>Dans le panier</h3>\n                <h3> {{product_total}} </h3>\n            </div>  \n\n            <div class=\"button-container\">\n                <button class=\"remove\" @click=\"removeToCart()\">Remove</button><!--Appelle fonction removeToCart-->\n                <button class=\"add\" @click=\"addToCart()\">Add</button><!--Appelle fonction addToCart-->\n            </div>    \n        </div>       \n    </div> \n    </div>       \n</template>\n\n<script>\n    export default{\n        props:['product', 'active'],/*On recupere les valeurs initial de product et active*/\n        methods: {/*Appelle des fonctions permettant de ouvrir ou fermer la description produit*/\n            addToCart() {\n                this.$store.commit('addToCart', this.product)\n            },\n            removeToCart(){\n                this.$store.commit('removeToCart', this.product)\n            }\n        \n        },\n        computed: {\n            product_total(){\n                return this.$store.getters.productQuantity(this.product)/*utilise le productQuantity utilise dans le magasin afin de determiner le nombre de produit total*/\n            }\n        }\n    }\n</script>\n\n<!----------------------------------------------Style--------------------------->\n\n<style lang=\"scss\">\n    .description-background {\n        width: 100%;\n        height: 100vh;\n        position: fixed;\n        left: 0;\n        top: 0;\n        background-color: rgb(124, 124, 124, 0.55);\n        z-index: 100;\n        display: none;\n        transition: display 1s;\n\n        &.show {\n            display: block;\n\n        }\n    }\n\n    .description{\n        width: 95vw;\n        height: 100vh;\n        background-color: white;\n        position: fixed;\n        top: 0;\n        left: -105vw;\n        padding: 70px 15px 15px 15px;\n        transition: left 1s;\n        z-index: 101;\n        overflow-y: scroll;\n\n        &.show{\n            left: 0;\n        }\n    }\n\n    .description-close {\n        font-size: 1.5rem;\n        padding: 5px;\n        border-radius: 5px;\n        right: 10px;\n        border: 2px solid gray;\n        color: #F06543;\n        width: 15px;\n        float: right;\n        cursor: pointer;\n\n        &.hover{\n            background-color: lightgray;\n        }\n    }\n\n    .product-details {\n        display: flex;\n        justify-content: center;\n        flex-direction: column;\n        align-items: center;\n\n        .button-container {\n            \n            display: flex;\n            justify-content: center;\n\n            button{\n                width: 150px;\n                padding: 10px;\n                border: none;\n                border-radius: 5px;\n                margin: 0 5px 50px 5px;\n                cursor: pointer;\n            }\n        }\n    }\n\n    @media (min-width: 500px){\n        .description {\n            width: 450px;\n        }\n    }\n\n</style>"]},"metadata":{},"sourceType":"module"}