{"ast":null,"code":"import { createStore } from 'vuex';\n\nfunction updateLocalStorage(cart) {\n  localStorage.setItem('cart', JSON.stringify(cart));\n}\n\nexport default createStore({\n  state: {\n    cart: []\n  },\n  getters: {\n    productQuantity: state => product => {\n      const item = state.cart.find(i => i.productId === product.productId);\n      if (item) return item.quantity;else return null;\n    },\n    cartItems: state => {\n      return state.cart;\n    },\n    cartTotal: state => {\n      return state.cart.reduce((a, b) => a + b.productPrice * b.quantity, 0);\n    }\n  },\n  mutations: {\n    addToCart(state, product) {\n      let item = state.cart.find(i => i.productId === product.productId);\n\n      if (item) {\n        item.quantity++;\n      } else {\n        state.cart.push({ ...product,\n          quantity: 1\n        });\n      }\n\n      updateLocalStorage(state.cart);\n    },\n\n    removeToCart(state, product) {\n      let item = state.cart.find(i => i.productId === product.productId);\n\n      if (item) {\n        if (item.quantity > 1) {\n          item.quantity--;\n        } else {\n          state.cart = state.cart.filter(i => i.productId !== product.productId);\n        }\n      }\n\n      updateLocalStorage(state.cart);\n    },\n\n    updateCartFromLocalStorage(state) {\n      const cart = localStorage.getItem('cart');\n\n      if (cart) {\n        state.cart = JSON.parse(cart);\n      }\n    },\n\n    removeFromCart(state, product) {\n      let item = state.cart.indexOf(product);\n    }\n\n  },\n  actions: {},\n  modules: {}\n});","map":{"version":3,"sources":["/Users/etiennehauguel/Desktop/exo perso/micro-projet/e-commerce/src/store/index.js"],"names":["createStore","updateLocalStorage","cart","localStorage","setItem","JSON","stringify","state","getters","productQuantity","product","item","find","i","productId","quantity","cartItems","cartTotal","reduce","a","b","productPrice","mutations","addToCart","push","removeToCart","filter","updateCartFromLocalStorage","getItem","parse","removeFromCart","indexOf","actions","modules"],"mappings":"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","sourcesContent":["import { createStore } from 'vuex'\n\nfunction updateLocalStorage(cart) {\n  localStorage.setItem('cart', JSON.stringify(cart))\n}\n\nexport default createStore({\n  state: {\n    cart: []\n  },\n  getters: {\n    productQuantity: state => product => {\n      const item = state.cart.find(i => i.productId === product.productId)\n\n      if(item) return item.quantity\n      else return null\n    },\n    cartItems: state => {\n      return state.cart\n    },\n    cartTotal: state => {\n      return state.cart.reduce((a, b) => a + (b.productPrice * b.quantity), 0)\n    }\n  },\n  mutations: {\n    addToCart(state, product){\n      let item = state.cart.find(i => i.productId === product.productId)\n\n      if(item){\n        item.quantity++\n        \n      } else {\n        state.cart.push({...product, quantity: 1})\n      }\n\n      updateLocalStorage(state.cart)\n    },\n    removeToCart(state, product){\n      let item = state.cart.find(i => i.productId === product.productId)\n\n      if(item){\n        if(item.quantity > 1){\n          item.quantity--\n        } else {\n          state.cart = state.cart.filter(i => i.productId !== product.productId)\n        }\n      }\n      updateLocalStorage(state.cart)\n    },\n    updateCartFromLocalStorage(state) {\n      const cart = localStorage.getItem('cart')\n      if(cart){\n        state.cart = JSON.parse(cart)\n      }\n    },\n    removeFromCart(state, product) {\n      let item = state.cart.indexOf(product)\n    }\n  },\n  actions: {\n  },\n  modules: {\n  }\n})\n"]},"metadata":{},"sourceType":"module"}