{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, Fragment as _Fragment } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\" X \");\n\nconst _hoisted_2 = {\n  key: 0,\n  class: \"product-details\"\n};\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = {\n  class: \"text-center\"\n};\nconst _hoisted_5 = {\n  class: \"text-center\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"panier_total\"\n};\n\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Dans le panier\", -1\n/* HOISTED */\n);\n\nconst _hoisted_8 = {\n  id: \"product_total\"\n};\nconst _hoisted_9 = {\n  class: \"button-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\"---------------Template du corps de la carte produit----------------------------\"), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"description-background\", {\n      show: $props.active\n    }])\n  }, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"description\", {\n      show: $props.active\n    }])\n  }, [_createElementVNode(\"div\", {\n    class: \"description-close\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('closeDescription'))\n  }, [_createCommentVNode(\"Appelle fonction CloseDescriptions\"), _hoisted_1]), $props.product ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createCommentVNode(\"-Si le produit est bien present alors on creer une div avec ses info recuperer dans le JSON \"), _createElementVNode(\"img\", {\n    src: $props.product.productPicture,\n    alt: \"image article\"\n  }, null, 8\n  /* PROPS */\n  , _hoisted_3), _createElementVNode(\"h3\", _hoisted_4, _toDisplayString($props.product.productName), 1\n  /* TEXT */\n  ), _createElementVNode(\"h3\", _hoisted_5, _toDisplayString($props.product.productPrice) + \" € \", 1\n  /* TEXT */\n  ), $options.product_total ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_hoisted_7, _createElementVNode(\"h3\", _hoisted_8, _toDisplayString($options.product_total), 1\n  /* TEXT */\n  )])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"button\", {\n    class: \"remove\",\n    onClick: _cache[1] || (_cache[1] = $event => $options.removeToCart())\n  }, \"Remove\"), _createCommentVNode(\"Appelle fonction removeToCart\"), _createElementVNode(\"button\", {\n    class: \"add\",\n    onClick: _cache[2] || (_cache[2] = $event => $options.addToCart())\n  }, \"Add\"), _createCommentVNode(\"Appelle fonction addToCart\")])])) : _createCommentVNode(\"v-if\", true)], 2\n  /* CLASS */\n  )], 2\n  /* CLASS */\n  )], 2112\n  /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCAAAA,iBAImH,KAJnH;;;AAAAC;AAQ4BC,OAAK,EAAC;;mBARlC;;AAUgBA,OAAK,EAAC;;;AACNA,OAAK,EAAC;;;AAXtBD;AAaiBC,OAAK,EAAC;;;gCACPC,oBAAuB,IAAvB,EAAuB,IAAvB,EAAI,gBAAJ,EAAkB;AAAA;AAAlB;;;AACIC,IAAE,EAAC;;;AAGNF,OAAK,EAAC;;;uBAlBvBG,+IACIF,oBAuBM,KAvBN,EAuBM;AAvBDD,SAAK,EADdI,iBACe,wBADf,EACuC;AAAAC,YAAgBC;AAAhB,KADvC;AAwBU,GAvBN,GAEAL,oBAoBM,KApBN,EAoBM;AApBDD,SAAK,EAHdI,iBAGe,aAHf,EAG4B;AAAAC,YAAgBC;AAAhB,KAH5B;AAuBU,GApBN,GACIL,oBAEM,KAFN,EAEM;AAFDD,SAAK,EAAC,mBAEL;AAF0BO,WAAK,sCAAEC,WAAK,kBAAL,CAAF;AAE/B,GAFN,GAAkEC,2DAJ1EC,WAIQ,GAIWJ,gCAAXH,oBAcM,KAdN,cAcM,CAdsCM,mHActC,EAbFR,oBAAuD,KAAvD,EAAuD;AAAjDU,OAAG,EAAEL,eAAQM,cAAoC;AAApBC,OAAG,EAAC;AAAgB,GAAvD;;AAAA,IATZC,UASY,CAaE,EAZFb,oBAAsD,IAAtD,cAAsDc,iBAA3BT,eAAQU,WAAmB,CAAtD,EAA8C;AAAA;AAA9C,GAYE,EAXFf,oBAAyD,IAAzD,cAAyDc,iBAA9BT,eAAQW,YAAsB,IAAR,KAAjD,EAAoD;AAAA;AAApD,GAWE,EAT8BC,wCAAhCf,oBAGM,KAHN,cAGM,CAFFgB,UAEE,EADFlB,oBAA+C,IAA/C,cAA+Cc,iBAArBG,sBAAqB,CAA/C,EAAuC;AAAA;AAAvC,GACE,CAHN,KAbZT,iCAsBc,EAJFR,oBAGM,KAHN,cAGM,CAFFA,oBAA8D,QAA9D,EAA8D;AAAtDD,SAAK,EAAC,QAAgD;AAAtCO,WAAK,sCAAEW,uBAAF;AAAiC,GAA9D,EAA+C,QAA/C,CAEE,EAF4DT,oDAE5D,EADFR,oBAAqD,QAArD,EAAqD;AAA7CD,SAAK,EAAC,KAAuC;AAAhCO,WAAK,sCAAEW,oBAAF;AAA2B,GAArD,EAAyC,KAAzC,CACE,EADmDT,iDACnD,CAHN,CAIE,CAdN,KARRA,kCAGI;;AAAA,IAFA;;AAAA,GADJ;;AAAA","names":["_createTextVNode","key","class","_createElementVNode","id","_createElementBlock","_normalizeClass","show","$props","onClick","_ctx","_createCommentVNode","_hoisted_1","src","productPicture","alt","_hoisted_3","_toDisplayString","productName","productPrice","$options","_hoisted_7"],"sourceRoot":"","sources":["/Users/etiennehauguel/Desktop/exo perso/micro-projet/e-commerce/src/components/product/ProductDescription.vue"],"sourcesContent":["<template><!-----------------Template du corps de la carte produit------------------------------>\n    <div class=\"description-background\" :class=\"{show: active}\" >    \n        \n    <div class=\"description\" :class=\"{show: active}\">\n        <div class=\"description-close\" @click=\"$emit('closeDescription')\"><!--Appelle fonction CloseDescriptions-->\n            X\n        </div> \n\n        <div v-if=\"product\" class=\"product-details\"><!---Si le produit est bien present alors on creer une div avec ses info recuperer dans le JSON -->\n            <img :src=\"product.productPicture\" alt=\"image article\">\n            <h3 class=\"text-center\"> {{product.productName}} </h3>\n            <h3 class=\"text-center\"> {{product.productPrice}} € </h3>\n\n            <div class=\"panier_total\" v-if=\"product_total\">\n                <h3>Dans le panier</h3>\n                <h3 id=\"product_total\"> {{product_total}} </h3>\n            </div>  \n\n            <div class=\"button-container\">\n                <button class=\"remove\" @click=\"removeToCart()\">Remove</button><!--Appelle fonction removeToCart-->\n                <button class=\"add\" @click=\"addToCart()\">Add</button><!--Appelle fonction addToCart-->\n            </div>    \n        </div>       \n    </div> \n    </div>       \n</template>\n\n<script>\n    export default{\n        props:['product', 'active'],/*On recupere les valeurs initial de product et active*/\n        methods: {/*Appelle des fonctions permettant de ouvrir ou fermer la description produit*/\n            addToCart() {\n                this.$store.commit('addToCart', this.product)\n            },\n            removeToCart(){\n                this.$store.commit('removeToCart', this.product)\n            }\n        \n        },\n        computed: {\n            product_total(){\n                return this.$store.getters.productQuantity(this.product)/*utilise le productQuantity utilise dans le magasin afin de determiner le nombre de produit total*/\n            }\n        }\n    }\n</script>\n\n<!----------------------------------------------Style--------------------------->\n\n<style lang=\"scss\">\n    .description-background {\n        width: 100%;\n        height: 100vh;\n        position: fixed;\n        left: 0;\n        top: 0;\n        background-color: rgb(124, 124, 124, 0.55);\n        z-index: 100;\n        display: none;\n        transition: display 1s;\n\n        &.show {\n            display: block;\n\n        }\n    }\n\n    .description{\n        width: 95vw;\n        height: 100vh;\n        background-color: white;\n        position: fixed;\n        top: 0;\n        left: -105vw;\n        padding: 70px 15px 15px 15px;\n        transition: left 1s;\n        z-index: 101;\n        overflow-y: scroll;\n\n        &.show{\n            left: 0;\n        }\n    }\n\n    .description-close {\n        font-size: 1.5rem;\n        padding: 5px;\n        border-radius: 5px;\n        right: 10px;\n        border: 2px solid #F06543;\n        color: #F06543;\n        width: 15px;\n        float: right;\n        cursor: pointer;\n\n        &.hover{\n            background-color: lightgray;\n        }\n    }\n\n    .product-details {\n        display: flex;\n        justify-content: center;\n        flex-direction: column;\n        align-items: center;\n\n        .button-container {\n            \n            display: flex;\n            justify-content: center;\n\n            button{\n                width: 150px;\n                padding: 10px;\n                border-radius: 5px;\n                margin: 0 5px 50px 5px;\n                cursor: pointer;\n            }\n\n            .add{\n                border: 1px solid #F06543;\n                color: #F06543;\n            }\n\n            .remove{\n                border: none;\n            }\n        }\n    }\n\n    @media (min-width: 500px){\n        .description {\n            width: 450px;\n        }\n    }\n\n</style>"]},"metadata":{},"sourceType":"module"}